<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>An Escape</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="pop-up-styles.css">    
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            overflow: hidden;
        }

        .gallery {
            height: 500vh;
            width: 100vw;
            display: flex;
            flex-direction: column;
            transition: transform 0.5s ease-in-out;
        }

        .page {
            height: 100vh;
            width: 100vw;
            flex-shrink: 0;
        }

        img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .nav-buttons {
            position: fixed;
            right: 20px;
            top: 50%;
            transform: translateY(-50%);
            display: flex;
            flex-direction: column;
            gap: 10px;
            z-index: 100;
        }

        button {
            width: 40px;
            height: 40px;
            background: rgba(0, 0, 0, 0.5);
            color: white;
            border: none;
            border-radius: 50%;
            cursor: pointer;
            transition: background 0.3s;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        button:hover {
            background: rgba(0, 0, 0, 0.7);
        }

        /* .audio-button {
            width: 12px;
            height: 12px;
            background: black;
            border-radius: 50%;
            position: absolute;
            left: 50%;
            cursor: pointer;
            transition: transform 0.2s;
        }

        .audio-button:hover {
            transform: scale(1.2);
        }

        .audio-button.top {
            top: 25%;
        }

        .audio-button.middle {
            top: 50%;
        }

        .audio-button.bottom {
            top: 75%;
        } */

        /* .audio-text {
            position: absolute;
            bottom: 10%;
            right: 10%;
            font-family: 'Times New Roman', serif;
            font-style: italic;
            color: #666;
            display: flex;
            align-items: center;
            gap: 10px;
            cursor: pointer;
        }

        .audio-control {
            background: none;
            border: none;
            cursor: pointer;
            padding: 5px;
        }

        .audio-control i {
            font-size: 20px;
            color: #666;
            transition: color 0.3s ease;
        }

        .audio-control.playing i {
            color: #ff4444;
        }

        .audio-control:hover i {
            color: #444;
        } */

        .audio-icon-title {
            position: fixed;
            left: 49%;
            bottom: 20px;
            z-index: 1000;
            opacity: 1;
            transition: opacity 0.3s ease;
        }

        .audio-icon-pages {
            position: fixed;
            left: 20px;
            bottom: 20px;
            z-index: 1000;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .audio-control-new {
            background: none;
            border: none;
            cursor: pointer;
            padding: 10px;
            border-radius: 50%;
            background-color: rgba(0, 0, 0, 0.5);
            transition: background-color 0.3s ease;
        }

        .audio-control-new i {
            font-size: 24px;
            color: white;
            transition: color 0.3s ease;
        }

        .audio-control-new:hover {
            background-color: rgba(0, 0, 0, 0.7);
        }

        .audio-control-new.playing i {
            color: #ff4444;
        }

        .arrow {
            border: solid white;
            border-width: 0 3px 3px 0;
            display: inline-block;
            padding: 4px;
        }

        .up {
            transform: rotate(-135deg);
        }

        .down {
            transform: rotate(45deg);
        }
    </style>
</head>
<body>
    <div class="gallery">
        <div class="page">
            <img src="Assets/title page.png" alt="Page 0">
        </div>
            <!-- <div class="audio-text">
                click here to start audio
                <button class="audio-control" onclick="toggleAudio()">
                    <i class="fa-solid fa-volume-off"></i>
                </button>
            </div> -->
        <div class="page">
            <img src="Assets/page1.png" alt="Page 1">
        </div>
        <div class="page">
            <img src="Assets/page2.png" alt="Page 1">      
        </div>
        <div class="page">
            <img src="Assets/page3.png" alt="Page 1">
        </div>
        <div class="page">
            <img src="Assets/page4.png" alt="Page 1">
        </div>
        <div class="page">
            <img src="Assets/page5.png" alt="Page 1">
        </div>
        <div class="page">
            <img src="Assets/page6.png" alt="Page 6">
        </div>
    </div>

    <div class="audio-icon-title">
        <button class="audio-control-new" onclick="startAudio()">
            <i class="fas fa-volume-up"></i>
        </button>
    </div>

    <div class="audio-icon-pages">
        <button class="audio-control-new" onclick="toggleAudio()">
            <i class="fas fa-play"></i>
        </button>
    </div>

    <!-- Audio element -->
    <audio id="background-audio" loop>
        <source src="Assets/audios/main-verse.m4a" type="audio/mpeg">
    </audio>

    <div class="nav-buttons">
        <button onclick="navigate(-1)"><i class="arrow up"></i></button>
        <button onclick="navigate(1)"><i class="arrow down"></i></button>
    </div>

    <script>
        let currentPage = 0;
        const gallery = document.querySelector('.gallery');
        const totalPages = document.querySelectorAll('.page').length;
        const audio = document.getElementById('background-audio');
        const titleAudioIcon = document.querySelector('.audio-icon-title');
        const pagesAudioIcon = document.querySelector('.audio-icon-pages');
        let isPlaying = false;

        // Add these variables at the top with your other variables
        const popup = document.querySelector('.popup-overlay');
        const popupSlides = document.querySelector('.popup-slides');
        let currentPopupSlide = 0;
        const totalPopupSlides = document.querySelectorAll('.popup-slide').length;

        // Add click handler to the red human figure
        document.addEventListener('DOMContentLoaded', function() {
            const page1 = document.querySelectorAll('.page')[1]; // Select the first page
            const redHuman = page1.querySelector('img'); // This will target the image
            
            redHuman.addEventListener('click', function(e) {
                // Get the coordinates of the click relative to the image
                const rect = redHuman.getBoundingClientRect();
                const x = e.clientX - rect.left;
                const y = e.clientY - rect.top;
                
                // Check if click is in the area of the red human (adjust these values as needed)
                if (x > 0 && x < (rect.width/2) && y > 0 && y < (rect.height/2)) {
                    alert("popped")
                    openPopup();
                }else {
                    alert("nahh")
                }
            });
        });

        function openPopup() {
            popup.style.display = 'flex';
            if (audio && isPlaying) {
                audio.pause();
                updatePlayPauseIcon();
            }
        }

        function closePopup() {
            popup.style.display = 'none';
            currentPopupSlide = 0;
            updatePopupSlides();
        }

        function navigatePopup(direction) {
            currentPopupSlide = Math.max(0, Math.min(currentPopupSlide + direction, totalPopupSlides - 1));
            updatePopupSlides();
        }

        function updatePopupSlides() {
            popupSlides.style.transform = `translateX(-${currentPopupSlide * 100}%)`;
        }

        // Add click event for close button
        document.querySelector('.popup-close').addEventListener('click', closePopup);

        // Close popup when clicking outside
        popup.addEventListener('click', function(e) {
            if (e.target === popup) {
                closePopup();
            }
        });

        function startAudio() {
            audio.play();
            isPlaying = true;
            titleAudioIcon.style.opacity = '0';
            pagesAudioIcon.style.opacity = '1';
            updatePlayPauseIcon();
        }

        function toggleAudio() {
            if (isPlaying) {
                audio.pause();
                pagesAudioIcon.querySelector('i').classList.remove('fa-pause');
                pagesAudioIcon.querySelector('i').classList.add('fa-play');
            } else {
                audio.play();
                pagesAudioIcon.querySelector('i').classList.remove('fa-play');
                pagesAudioIcon.querySelector('i').classList.add('fa-pause');
            }
            isPlaying = !isPlaying;
        }

        function updatePlayPauseIcon() {
            const icon = pagesAudioIcon.querySelector('i');
            icon.classList.remove('fa-play', 'fa-pause');
            icon.classList.add(isPlaying ? 'fa-pause' : 'fa-play');
        }


        function navigate(direction) {
            currentPage = Math.max(0, Math.min(currentPage + direction, totalPages - 1));
            gallery.style.transform = `translateY(-${currentPage * 100}vh)`;
            
            // Show/hide appropriate audio controls based on page
            if (currentPage === 0) {
                titleAudioIcon.style.opacity = '1';
                pagesAudioIcon.style.opacity = '0';
            } else {
                titleAudioIcon.style.opacity = '0';
                pagesAudioIcon.style.opacity = '1';
            }
        }

        // Keyboard navigation
        document.addEventListener('keydown', (e) => {
            if (e.key === 'ArrowUp') navigate(-1);
            if (e.key === 'ArrowDown') navigate(1);
        });

        // Keyboard navigation
        document.addEventListener('keydown', (e) => {
            if (e.key === 'ArrowUp') navigate(-1);
            if (e.key === 'ArrowDown') navigate(1);
        });
    </script>
</body>
</html>